@model IEnumerable<TestApplication1.Models.Client>
@using GridMvc.Html

@{
    Layout = null;
    var client = ViewBag.clients as IEnumerable<TestApplication1.Models.Client>;
    var client2 = ViewBag.clients;

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    @*<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")"></script>*@
    <script src="@Url.Content("~/Scripts/jquery-3.3.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
    <script src="@Url.Content("~/Scripts/ASPSnippets_Pager.min.js")"></script>
    <title>Index</title>
</head>
<body>
    <h1>Grid.MVC</h1>
    <hr />
    <select id="ddlusername">
        <option>1</option>
        <option>2</option>
        <option>3</option>
    </select>

    <div style="width:500px;">
        @Html.Grid(Model).Columns(columns =>
   {
       columns.Add(c => c.Id).Titled("Client ID");
       columns.Add(c => c.Name).Titled("Name").Filterable(true);
       columns.Add(c => c.Email).Titled("Email");
       columns.Add().Encoded(false).Titled("Select").Sanitized(false).SetWidth(2).RenderValueAs(c => @Html.DropDownList("Select", new SelectList(ViewBag.Status.Items, "Value", "Text", c.Name), new { style = "width: 70px;", @class = "form-control" }));
       //columns.Add(c => c.Name).Encoded(false).Titled("Select").Sanitized(false).SetWidth(2).RenderValueAs(c => @Html.DropDownList("Select", new SelectList(ViewBag.selectlist, "Value", "Text"), new { style = "width: 70px;", @class = "form-control" }));

   }).WithPaging(3).Sortable(true)
    </div>
</body>
</html>


<img src="@Url.Content("~/images/Arrow.png")" />

<br/>
<br />
<input type="button" class="doClick" value="click"/>
<div class="xx">
    @*<img class="xx2" />*@
    @*<img class="xx3" />*@
</div>

<script>
    $(function () {
        GetCustomers(1);

        $("#ddlusername").change(function () {
            var userName = $("#ddlusername").val();
            var row = "";
            var html = '';
            var html2 = '';



                $.ajax({
                    url: '@Url.Action("getLeads", "Home")', 
                    dataType: "json",
                    data: JSON.stringify({ UserName: userName }),
                    type: "Post",
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {

                        $("div tbody").empty();
                        $.each(result.list.client, function (i, v) {                           
                            row += "<tr><td>" + v.Id + "</td><td>" + v.Name + "</td><td>" + v.Email + "</td></tr>";
                        });

           
                       $("div tbody").html(row);
                    },
                    error: function (xhr) {
                        alert("error");
                    }
                });


            });



    });
    $(".doClick").click(function () {
           $.ajax({
                    url: '@Url.Action("getLeads", "Home")', //
                    dataType: "json",
                   
                    success: function (result) {

                        html2 = "<img src='" + result.imagelist + '\'' + "/>";
            

                        $('.xx').html(html2);
                      
                    }
                    
                });


            });

    $("body").on("click", ".pagination >li >a", function () {
        var url=$(this).attr('href');
        var gridpage = getURLParameter(url, 'grid-page');
        GetCustomers(parseInt(gridpage));
    });
    function GetCustomers(pageIndex) {
        $.ajax({
            type: "POST",
            url: "/Home/AjaxMethod",
            data: '{pageIndex: ' + pageIndex + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: OnSuccess,
            failure: function (response) {
                alert(response.d);
            },
            error: function (response) {
                alert(response.d);
            }
        });
    };
    function OnSuccess(response) {
        var model = response;
        var row = $("#table table-striped grid-table tbody tr:last-child").clone(true);
        $("#table table-striped grid-table tbody tr").remove();
        $.each(model.client, function () {
            var client = this;
            $("td", row).eq(0).html(client.Id);
            $("td", row).eq(1).html(client.Name);
            $("td", row).eq(2).html(client.Email);
            $("#table table-striped grid-table").append(row);
            row = $("#table table-striped grid-table tbody tr:last-child").clone(true);
        });
        $(".Pager").ASPSnippets_Pager({
            ActiveCssClass: "current",
            PagerCssClass: "pager",
            PageIndex: model.PageIndex,
            PageSize: model.PageSize,
            RecordCount: model.RecordCount
        });
    };
</script>