@*@model List<TestApplication1.Models.author2>*@
@{
    ViewBag.Title = "PagedListPager_Index";
}

@using PagedList.Mvc;
@using PagedList;

<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

<ul>
    @foreach (var product in ViewBag.OnePageOfProducts)
    {
        <li>@product.Name</li>
    }
</ul>

<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@*@Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("PagedListPager_Index", new { page }))*@

@*@Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("PagedListPager_Index", new { page ,accountmenu = ViewBag.AccountMenu, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
                        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                        {
                            LinkToFirstPageFormat = "<<",
                            LinkToPreviousPageFormat = "<",
                            LinkToNextPageFormat = ">",
                            LinkToLastPageFormat = ">>",
                            //DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                            //DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                            //DisplayLinkToLastPage = PagedListDisplayMode.Always,
                            //DisplayLinkToNextPage = PagedListDisplayMode.Always,
                            //MaximumPageNumbersToDisplay = 0,
                            DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                        }, new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "some_grid_container" }))*@

@Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("PagedListPager_Index", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                                     new AjaxOptions { InsertionMode = InsertionMode.Replace, HttpMethod = "GET" }))

@*@Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("PagedListPager_Index", new { page = page }),
    new PagedListRenderOptions
    {
        LinkToFirstPageFormat = "<< Primera",
        LinkToPreviousPageFormat = "< Anterior",
        LinkToNextPageFormat = "Siguiente >",
        LinkToLastPageFormat = "Ultima >>"
    })*@

