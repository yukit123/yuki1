@*@model List<WebApplication1.Controllers.HomeController.ListStrViewModel>*@
@{

//var g = new WebGrid(source: ViewBag.addresses);

}
<style type="text/css">
    /*.selectRow {
        background: black;
        color: white;
    }*/

    tbody {
        font-family: Arial;
        font-size: 10pt;
    }

    .Grid {
        border: 1px solid #ccc;
        border-collapse: collapse;
    }

        .Grid th {
            background-color: #F7F7F7;
            font-weight: bold;
        }

        .Grid th, .Grid td {
            padding: 5px;
            border: 1px solid #ccc;
            width: 120px;
        }

        .Grid, .Grid table td {
            border: 0px solid #ccc;
        }
</style>
<div id="main">
    <div>
        @using (Html.BeginForm("Webgrid2", "Home", FormMethod.Post))
        {
            <input type="text" name="searchString" id="searchString" /><input type="submit" value="Search" />
        }

    </div>
    @{
        var grid = new WebGrid(source: ViewBag.list, canPage: true, canSort: true, rowsPerPage: 3);
        grid.Pager(WebGridPagerModes.NextPrevious);
        @MvcHtmlString.Create(
    @grid.GetHtml(/*tableStyle: "table",*/ htmlAttributes: new { id = "gridT", @class = "Grid" },//tableStyle: "table" define the class name
columns: grid.Columns(
  grid.Column(columnName :"Id", header: "Id", canSort: true),
  grid.Column("field1", "field1xxx", canSort: false)
  @*grid.Column("field2", "field2xx", canSort: false),
  grid.Column("field3", "field3xx", canSort: false),
  grid.Column(columnName: "Images", header: "Images",
             format:@<text>@Html.Raw("<img src=\"/images/Arrow.png\" />")</text>),
  grid.Column(columnName: "Images2", header: "Images2",
                    format:@<img src="~/images/Arrow.PNG" />),
  grid.Column("dropdownlist", "Select", canSort: false,
                                                 format: @<text>@Html.DropDownList("select", new SelectList(ViewBag.selectlist, "Value", "Text"))</text>),
  grid.Column(header: "Actions", format: (item) =>
                                                           new HtmlString(

                                                               Html.ActionLink("Edit", "Edit", new { id = item.ID }).ToString() + " | " +

                                                                 Html.ActionLink("create", "Create", new { id = item.ID }).ToString() + " | " +
                                                                  Html.ActionLink("Invoice", "Invoice", new { id = item.ID }).ToString() + " | " +
                                                               Html.ActionLink("Delete", "Delete", new { id = item.ID }).ToString()

                                                               ), style: "Action"

                                               )*@
                                                )

                                                                           //);
                                                                           ).ToHtmlString()

                                                                       )

    }
    @*@Html.PagedListPager(Model, page => Url.Action("Index", new { page, txtFilterAIGGMT = ViewBag.FtxtFilterAIGGMT, CoordAuthDirectorateId = ViewBag.FCoordAuthDirectorateId, txtFilterAIGCAPC = ViewBag.FtxtFilterAIGCAPC, CognAuthDirectorateId = ViewBag.FCognAuthDirectorateId, txtFilterAIGCGAPC = ViewBag.FtxtFilterAIGCGAPC, txtFilterAIGEPurpose = ViewBag.FtxtFilterAIGEPurpose, AigType = ViewBag.FAigType, txtFilterAIGContactName = ViewBag.FtxtFilterAIGContactName, chkFilterAIGMailingList = ViewBag.FchkFilterAIGMailingList, txtFilterAIGSIC = ViewBag.FtxtFilterAIGSIC, AigStatus = ViewBag.FAigStatus, txtNumberOfDaysUntilExpiry = ViewBag.FtxtNumberOfDaysUntilExpiry, txtFilterAIGNotes = ViewBag.FtxtFilterAIGNotes }))*@

    @*@grid.GetHtml()*@
</div>
@section scripts{
    @*<script>
        $(document).ready(function () {
            $('#gridT tbody tr').first().addClass('selectRow')
        })
    </script>*@
}